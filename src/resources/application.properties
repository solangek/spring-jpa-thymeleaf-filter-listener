
# OPTION 1: MYSQL DATABASE
#spring.datasource.url=jdbc:mysql://localhost:3306/ex4?serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
## for production use:
## spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
#spring.jpa.generate-ddl=true
#spring.jpa.show-sql=true

# OPTION 2: USING IN MEMORY DATABASE (INSTEAD OF SQL ABOVE)
spring.datasource.url=jdbc:h2:mem:ex4
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true






spring.freemarker.suffix=.html

# session duration
# spring.session.timeout=300
#  If that property is not set with a servlet web application, the auto-configuration falls back to the value of server.servlet.session.timeout


# Explicitly configuring the store type for Spring session via spring.session.store-type is no longer supported
# 1. no session store - note that SQL does not throw session events
# spring.session.store-type=none
# server.servlet.session.store-type=none

# 2. uncomment this to enable JDBC style session store - SessionListenerCounter doesn't fire
#spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always


# open   http://localhost:8080/h2-console/ to see session
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

demo.coursename: Internet

# custom error page URL
server.error.path=/error

# control logging for debugging
#logging.level.web=TRACE
#logging.level.org.springframework.web=TRACE
